apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: clone-build-push
spec:
  description: |
    This pipeline clones a git repo, builds a Docker image with Kaniko and
    pushes it to a registry
  params:
  - name: repo-url
    type: string
  - name: image-reference
    type: string
  - name: dockerfile-path
    type: string
  - name: ignore-rules
    type: string
  - name: helm-chart-dir
    type: string
  - name: trivy_args_image_local
    type: array
  workspaces:
  - name: shared-data
  tasks:
  # Clone source code repository
  - name: fetch-source
    taskRef:
      name: git-clone
    workspaces:
    - name: output
      workspace: shared-data
    params:
    - name: url
      value: $(params.repo-url)
  # Execute makefile linting
  - name: makefile-lint
    runAfter: ["fetch-source"]
    taskRef:
      name: check-make
    workspaces:
    - name: shared-workspace
      workspace: shared-data
    params:
    - name: args
      value: ["Makefile"]
  # Execute markdown linting
  - name: markdown-lint
    runAfter: ["fetch-source"]
    taskRef:
      name: markdown-lint
    workspaces:
    - name: shared-workspace
      workspace: shared-data
    params:
    - name: args
      value: ["."]
  # Execute python linting
  - name: pylint
    runAfter: ["fetch-source"]
    taskRef:
      name: pylint
    workspaces:
    - name: source
      workspace: shared-data
  # Execute python unit tests
  - name: pytest
    runAfter: ["fetch-source"]
    taskRef:
      name: python-coverage
    workspaces:
    - name: source
      workspace: shared-data
    params:
    - name: PYTHON
      value: "3.7"
  # Docker file linting
  - name: docker-lint
    runAfter: ["fetch-source"]
    taskRef:
      kind: Task
      name: hadolint
    workspaces:
    - name: source
      workspace: shared-data
    params:
    - name: ignore-rules
      value: $(params.ignore-rules)
    - name: dockerfile-path
      value: $(params.dockerfile-path)
  # Helm/k8s manifests linting
  - name: helm-k8s-lint
    runAfter: ["fetch-source"]
    taskRef:
      kind: Task
      name: kube-linter
    workspaces:
    - name: source
      workspace: shared-data
    params:
    - name: manifest
      value: $(params.helm-chart-dir)
    - name: default_option
      value: do-not-auto-add-defaults
    - name: includelist
      value: "no-extensions-v1beta"
  # Check helm manifests against OPA Conftest rules
  - name: opa-conftest-check
    runAfter: ["fetch-source"]
    taskRef:
      kind: Task
      name: helm-conftest
    workspaces:
    - name: source
      workspace: shared-data
    params:
    - name: chart
      value: $(params.helm-chart-dir)
    - name: policy
      value: policy
  # Build OCI Image
  - name: kaniko-build
    runAfter: ["makefile-lint", "markdown-lint", "pylint", "pytest", "docker-lint", "helm-k8s-lint", "opa-conftest-check"]
    taskRef:
      name: kaniko
      kind: Task
    params:
      - name: IMAGE
        value: $(params.image-reference)
      - name: EXTRA_ARGS
        value:
          - --skip-tls-verify
          - --insecure
    workspaces:
      - name: source
        workspace: shared-data
  # Copy OCI Image locally
  - name: skopeo-local-copy
    runAfter: ["kaniko-build"]
    taskRef:
      name: custom-skopeo
      kind: Task
    params:
      - name: args
        value: |
          copy docker://$(params.image-reference) --src-tls-verify=false oci:/workspace/source/local
    workspaces:
      - name: source
        workspace: shared-data
  # Image scan with trivy
  - name: trivy-scan-local-image
    runAfter: ["skopeo-local-copy"]
    taskRef:
      name: trivy-scanner
      kind: Task
    params:
      - name: ARGS
        value: ["$(params.trivy_args_image_local[*])"]
      - name: IMAGE_PATH
        value: "/workspace/manifest-dir/local"
    workspaces:
      - name: manifest-dir
        workspace: shared-data



